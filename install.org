#+TITLE: Setting up a new Mac from scratch using nix-darwin

*** Wipe the hard disk, and format as APFS

*** Install Mac OS X

*** Run the App Store and update to the latest version

*** Install Xcode

*** Run Terminal.app and accept the Xcode license

#+begin_src sh
sudo xcodebuild -license
#+end_src

Press =SPACE= many times, and then type =accept=.

*** Install multi-user Nix

#+begin_src sh
sh <(curl https://nixos.org/nix/install) --daemon
#+end_src

*** Add the Nix system path to =.bashrc=

#+begin_src sh
echo 'export PATH=$PATH:/nix/var/nix/profiles/default/bin' > .bashrc
chmod +x .bashrc
#+end_src

*** Confirm you can login from another machine

#+begin_src sh
ssh $REMOTE nix-daemon --version
#+end_src

*** Add yourself as a trusted user to =/etc/nix/nix.conf=

On the new machine, run:

#+begin_src conf
sudo cat >> /etc/nix/nix.conf <<EOF
trusted-users = $USER @admin
allowed-users = *
EOF
#+end_src

Then run:
#+begin_src sh
sudo killall nix-daemon
#+end_src

*** Seed Nix store contents from a working machine

On the already configured machine, run:

#+begin_src sh
nix copy --no-check-sigs --keep-going --to ssh-ng://$REMOTE ~/.nix-profile
#+end_src

*** Install nix-darwin (optional)

#+begin_src sh
nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer
./result/bin/darwin-installer
#+end_src

*** Build and switch to this Nix environment

#+begin_src sh
make -C $PWD -f Makefile HOSTNAME=<name of host>
#+end_src

Note that the hostname must match a like-named file in the =config= directory.
These files allow the configuration to vary per-machine.

If you're using this config entirely, you won't need to install =nix-darwin=
separately. But you'll need to modify several of the configuration files which
refer to paths you won't have on your own machine.

#!/bin/bash

if [[ "$(basename $PWD)" =~ hs-dfinity-(.+) && ! -f .envrc ]]; then
    echo "Setting up for -A ${BASH_REMATCH[1]}"
    cat > .envrc <<EOF
. ../nix/use_nix.sh
export NIXFLAGS=(--arg useHoogle false --arg devel true)
export NIXARGS=("\${NIXFLAGS[@]}" -A ${BASH_REMATCH[1]})
export NIXFILE=../shell.nix
export NIXBLDARGS=(-f "\$NIXFILE" "\${NIXFLAGS[@]}" ${BASH_REMATCH[1]})
export CABAL_BUILDDIR=\$(pwd | sed 's^dfinity^Products^')/dist
export CARGO_TARGET_DIR=\$(pwd | sed 's^dfinity^Products^')/target
export CARGO_HOME=\$CARGO_TARGET_DIR/.cargo-home
use_nix
EOF
    direnv allow .

elif [[ -f add-direnv.sh ]]; then
    echo "Setting up for -A new-build"
    cat > .envrc <<EOF
. nix/use_nix.sh
export NIXFLAGS=(--arg useHoogle true --arg devel true)
export NIXARGS=("\${NIXFLAGS[@]}" -A new-build)
export NIXFILE=shell.nix
export NIXBLDARGS=(-f "\$NIXFILE" "\${NIXFLAGS[@]}" new-build)
export CABAL_BUILDDIR=\$(pwd | sed 's^dfinity^Products^')/dist
export CARGO_TARGET_DIR=\$(pwd | sed 's^dfinity^Products^')/target
export CARGO_HOME=\$CARGO_TARGET_DIR/.cargo-home
use_nix
EOF
    direnv allow .

elif [[ ! -f .envrc ]]; then
    cat > .envrc <<EOF
. \$(which use_nix.sh)
# export NIXPKGS='(import <darwin> {}).pkgs'
export NIXARGS=()
# export NIXARGS=(--arg pkgs "\$NIXPKGS")
export NIXBLDARGS=(-f . "\${NIXARGS[@]}")
export CABAL_BUILDDIR=\$(pwd | sed 's^src^Products^')/dist
export CARGO_TARGET_DIR=\$(pwd | sed 's^src^Products^')/target
export CARGO_HOME=\$CARGO_TARGET_DIR/.cargo-home
use_nix
EOF
    direnv allow .

else
    direnv allow .
    rm -fr .direnv
fi
